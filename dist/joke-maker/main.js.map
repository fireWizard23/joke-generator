{"version":3,"file":"main.js","mappings":"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","sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/joke-page/joke-page.component.ts","./src/app/components/joke-page/joke-page.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/not-found/not-found.component.ts","./src/app/components/not-found/not-found.component.html","./src/app/components/reusable/dropdown/dropdown.component.ts","./src/app/components/reusable/dropdown/dropdown.component.html","./src/app/misc/joke.model.ts","./src/app/services/http-service/http-service.service.ts","./src/app/services/joke-http-service/joke-http.service.ts","./src/app/services/meta-services/meta.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport { JokePageComponent } from './components/joke-page/joke-page.component';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent\n  },\n  {\n    path: 'joke/:id',\n    component: JokePageComponent\n  },\n  {\n    path: '**' ,\n    component: NotFoundComponent\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Joke Generator - Home';\n\n  date = new Date().getFullYear();\n\n}\n","<div class=\"html-main-container\">\n    <div class=\"no-footer\">\n        <app-navbar></app-navbar>\n        <router-outlet></router-outlet>\n    </div>\n    <footer >\n        <div class=\"container\">\n            <span><a class=\"joke-api-link\" href=\"https://sv443.net/jokeapi/v2/\" target=\"_blank\">Joke API</a></span>\n\n            <span class=\"footer-brand\" >Joke Generator &copy; {{date}} </span>\n            <span><a class=\"joke-api-link\" href=\"https://sv443.net/jokeapi/v2/\" target=\"_blank\">Joke API</a></span>\n        </div>\n    </footer>\n</div>","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { DropdownComponent } from './components/reusable/dropdown/dropdown.component';\nimport { JokePageComponent } from './components/joke-page/joke-page.component';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    NavbarComponent,\n    DropdownComponent,\n    JokePageComponent,\n    NotFoundComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [ \n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { AfterContentChecked, AfterContentInit, AfterViewChecked, AfterViewInit, ChangeDetectorRef, Component, OnChanges, OnDestroy, OnInit, SimpleChanges, ViewChild, ViewChildren} from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { JokeHttpService} from 'src/app/services/joke-http-service/joke-http.service';\nimport { DropdownComponent } from '../reusable/dropdown/dropdown.component';\nimport {TwoPartJoke,Joke, SingleJoke, getJokeString} from '../../misc/joke.model';\nimport { Option } from '../reusable/dropdown/dropdown.component';\nimport { Title } from '@angular/platform-browser';\nimport { MetaService } from 'src/app/services/meta-services/meta.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit, OnDestroy {\n\n  jokeString!: string | null | undefined;\n  joke!: Joke;\n\n  jokeSuscription!: Subscription;\n  \n  constructor(private httpService : JokeHttpService, private _metaService : MetaService ) {}\n\n\n  ngOnDestroy(): void {\n    this.jokeSuscription.unsubscribe();\n  }\n\n\n  ngOnInit(): void {\n    this.getNewJoke();\n    this._metaService.updateTitle('Home');\n  }\n\n  private getNewJoke() {\n    this.jokeString = null;\n    let joke: Observable<Joke>;\n\n    let random = Math.random();\n    \n    if(random > 0.5) {\n      joke = this.httpService.getSingleJoke();\n    } else {\n      joke = this.httpService.getTwoPartJoke();\n    }\n    \n\n\n    this.jokeSuscription = joke.subscribe((val) => {\n      this.jokeString = getJokeString(val) || 'Error';\n      this.joke = val;\n    });\n\n    \n  }\n\n  handleClick(){\n    this.getNewJoke();\n    \n\n\n  }\n  \n\n\n}\n","<div class=\"joke-form-container\">\n\n    <div class=\"joke-container\">\n        <p class=\"joke-text\" style=\"white-space: pre-line;\" >\n            {{ jokeString  || 'Loading...' }}\n        </p>\n        <span class=\"joke-category\" *ngIf=\"jokeString !== null\" >{{joke.category }}\n        </span>\n        <a routerLink=\"/joke/{{joke.id}}\" *ngIf=\"jokeString != null\" >Go</a>\n    </div>\n    \n    <button class=\"joke-button\"\n        (click)=\"handleClick()\"\n    >\n        {{joke === undefined ? 'Get' : 'Another'}} Joke\n    </button>\n\n</div>\n\n\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { getJokeString, Joke, JokeError, jokeToError } from 'src/app/misc/joke.model';\nimport { JokeHttpService } from 'src/app/services/joke-http-service/joke-http.service';\nimport { MetaService } from 'src/app/services/meta-services/meta.service';\n\n@Component({\n  selector: 'app-joke-page',\n  templateUrl: './joke-page.component.html',\n  styleUrls: ['./joke-page.component.scss']\n})\nexport class JokePageComponent implements OnInit, OnDestroy {\n\n  joke!: Joke;\n  jokeError!: JokeError;\n  \n  private _jokeSubscription!: Subscription;\n\n  constructor(\n    private _router: Router,\n    private _activatedRoute : ActivatedRoute,\n    private httpService: JokeHttpService,\n    private _metaService : MetaService \n      ) { }\n\n  ngOnDestroy(): void {\n    this._jokeSubscription?.unsubscribe();\n  }\n\n  ngOnInit(): void {\n\n\n    this._activatedRoute.params.subscribe((val) => {\n\n      const id:number = Number(val.id);\n\n      console.log(id, id == NaN);\n\n      this._metaService.updateTitle(`${val.id}`);\n\n\n      if(Number.isNaN(id)) {\n        this._router.navigateByUrl(`/error?error=id&id=${val.id}asdf`)\n        return;\n      }\n\n\n      this._jokeSubscription = this.httpService.getJokeById(id).subscribe((joke) => {\n        \n        if(joke.error) {\n          this.jokeError = jokeToError(joke);\n          return;\n        }\n\n\n        this.joke = joke;\n        const jokeString = getJokeString(joke);\n        if(jokeString != null) {\n          this._metaService.setDescription(jokeString.substring(0,30) + '...' + `Get more jokes using JokeGenerator. Joke Generator uses the JokeAPI to get the best jokes possible`);\n          this._metaService.setKeywords(this.joke.category);\n        }\n\n      });\n    });\n\n  }\n\n\n\n\n}\n","<p>\n    {{(joke || jokeError) | json}}\n\n</p>\n","import { Component, HostListener, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n  innerWidth!: number;\n\n  @HostListener('window:resize')\n  onResize() {\n    this.innerWidth = window.innerWidth;\n  }\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.innerWidth = window.innerWidth;\n  }\n\n\n\n\n\n}\n","<header class=\"navbar\">\n    <div class=\"navbar-container\">\n        <a routerLink=\"/\"  class=\"navbar-brand\"  >{{ innerWidth > 500 ? 'Joke Generator' : 'JokeGenerator'}}</a>\n    </div>\n</header>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MetaService } from 'src/app/services/meta-services/meta.service';\n\n\ntype PageError = 'id' | 'notfound';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n\n\n  message!: string;\n\n  constructor(private _activatedRoute: ActivatedRoute, private _metaService: MetaService) { }\n\n  ngOnInit(): void {\n    this._activatedRoute.queryParams.subscribe((params) => {\n      let error = params.error as PageError;\n\n      if(error === 'id') {\n        this.message = `Error: Id: ${params.id} is not found. Please check if it is a valid id.`\n      } else {\n        this.message = 'Error404. Page not found.'\n      }\n      this._metaService.updateTitle(this.message, true);\n    })\n\n  }\n\n}\n","<p>\n    {{message}}\n\n</p>\n","import { AfterContentChecked, AfterContentInit, AfterViewChecked, AfterViewInit, Component, EventEmitter, HostListener, Input, OnChanges, OnInit, Output, Renderer2, SimpleChanges} from '@angular/core';\n\n\nexport interface Option {\n    value: string,\n    id?: string\n}\n\n@Component({\n  selector: 'rm-dropdown',\n  templateUrl: './dropdown.component.html',\n  styleUrls: ['./dropdown.component.scss']\n})\nexport class DropdownComponent implements OnInit\n{\n  \n  private _dropdownIsOpen: boolean = false;\n  readonly ID_PREFIX = 'rm-dropdown-';\n\n  @Output() onValueChange = new EventEmitter<string>();\n  @Input() defaultIndex!: number;\n\n  private _value! : string;\n\n  get value(): string {\n    return this._value;\n  }\n\n  private set value(val: string) {\n    if(val == undefined || val == null)\n      debugger;\n    this._value = val;\n    this.onValueChange.emit(val);\n  }\n\n  _options!: Option[];\n\n  ngOnInit(): void {\n    \n    if(this._options == undefined)\n      throw new Error(\"No options given in the DropdownComponent.\");\n    \n    this._value = this._options[this.defaultIndex || 0].value;\n\n\n  }\n\n  @Input()\n  set option(option: Option[]) {\n\n    option.forEach((val, index) => {\n      val.id = this.ID_PREFIX + index;\n    });\n\n    this._options = option;\n  }\n\n  get dropdownIsOpen() : boolean {\n    return this._dropdownIsOpen;\n  }\n\n  \n\n  @HostListener('window:click', ['$event']) click(e : MouseEvent) {\n    if(!this._dropdownIsOpen)\n      return;\n\n    let target = e.target as Element;\n    if(!target.id.includes(this.ID_PREFIX)) {\n      this.toggleDropdown();\n    }\n    \n  };\n\n\n\n  public toggleDropdown(): void {\n    this._dropdownIsOpen = !this._dropdownIsOpen;\n\n\n  }\n\n  public handleClick(e : Event) {\n    e.stopPropagation();\n    e.preventDefault();\n\n    if(this._options == undefined)\n      return;\n\n    let target = e.target as Element;\n\n    let text = target.id;\n    const val = this._options.find((val) => val.id == text)?.value;\n    \n    if(text !== this.ID_PREFIX + '-1' && val != null){\n      this.value = val;\n\n    } \n\n    setTimeout(() => {\n      this.toggleDropdown();\n\n    }, 100)\n\n\n  }\n\n}\n","<button    class=\"dropdown\"  href=\"#\"\n    (click)=\"handleClick($event)\" >\n    <h1 class=\"dropdown-label\" [id]=\"ID_PREFIX + '-1'\"\n        [ngClass]=\"{'full': !dropdownIsOpen}\"\n    >\n        {{ value || 'Error'}}\n    </h1>\n    <div class=\"dropdown-options\" [hidden]=\"!dropdownIsOpen\" >\n        <button\n        *ngFor=\"let opt of _options; let index= index; let last = last; let first = first;\"\n        [ngClass]=\" {'first': first, 'last': last} \" class=\"dropdown-option\" [id]=\"opt.id\"\n        >\n                {{opt.value}}\n        </button>\n    </div>\n\n</button>","export type JokeFlags = {\r\n    nsfw: boolean,\r\n    religious: boolean,\r\n    political: boolean,\r\n    racist: boolean,\r\n    sexist: boolean\r\n  }\r\n\r\nexport type JokeError = {\r\n  error: boolean;\r\n  internalError: boolean;\r\n  code: number;\r\n  message: string;\r\n  causedBy: string[];\r\n  additionalInfo: string;\r\n  timestamp: number;\r\n}\r\n  \r\nexport type JokeType = 'twopart' | 'single';\r\nexport type JokeCategory = 'any' | 'programming' \r\n\r\nexport type Joke = {\r\n  error: boolean,\r\n  category: JokeCategory,\r\n  type: JokeType,\r\n  flags: JokeFlags,\r\n  explicit: boolean,\r\n  id: number,\r\n  safe: boolean,\r\n  lang: String,\r\n  \r\n} \r\n\r\nexport type SingleJoke = {\r\n  joke: string,\r\n  type: 'single'\r\n} & Joke\r\n\r\nexport type TwoPartJoke = {\r\n  delivery: string,\r\n  setup: string,\r\n  type: 'twopart'\r\n} & Joke\r\n\r\n\r\nexport function jokeToError(joke: Joke) : JokeError {\r\n  return (joke as any) as JokeError;\r\n}\r\n\r\nexport function getJokeString(joke : Joke) : string | null {\r\n    if(joke.type === 'twopart') {\r\n      let twopartJoke = joke as TwoPartJoke;\r\n      return `${twopartJoke.setup} \\n${twopartJoke.delivery}`;\r\n\r\n    } else if(joke.type == 'single') {\r\n      let singleJoke = joke as SingleJoke;\r\n\r\n      return singleJoke.joke;\r\n    }\r\n\r\n    return null;\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { environment as env } from 'src/environments/environment';\n\n\n@Injectable({\n  providedIn: 'root'\n\n})\nexport class HttpService {\n\n  constructor(protected http : HttpClient ) { }\n\n  /**\n   * @param  {string} url - the relative path to the url\n   */\n  getByUrl<T extends object>(url: string) : Observable<T> {\n    // let params = new HttpParams().set('type', 'single');\n    return this.http.get<T>(this.combineUrl(env.JOKE_URL, url));\n  }\n\n  protected combineUrl(url1: string, url2: string ) : string {\n    const slash = '/';\n    const firstUrlEndsWithSlash = url1.endsWith(slash);\n    const secondUrlStartsWithSlash = url2.startsWith(slash);\n\n\n    if(!firstUrlEndsWithSlash && !secondUrlStartsWithSlash)\n      url1 += slash;\n    \n      return url1 + url2;\n\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpService } from '../http-service/http-service.service';\nimport { environment as env } from 'src/environments/environment';\nimport { HttpParams } from '@angular/common/http';\nimport {TwoPartJoke,Joke, SingleJoke, JokeCategory, JokeType} from '../../misc/joke.model';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JokeHttpService extends HttpService {\n\n\n  public getSingleJoke(category: JokeCategory='any') : Observable<SingleJoke> {\n    return this.getRandomJoke<SingleJoke>('single', category) ;\n  }\n\n\n  public getTwoPartJoke(category: JokeCategory='any') : Observable<TwoPartJoke> {\n    return this.getRandomJoke<TwoPartJoke>('twopart', category) ;\n  }\n  \n  public getJokeById(id: number) : Observable<Joke> {\n    let url = this.combineUrl(env.JOKE_URL, 'any');\n    let params = new HttpParams().set('idRange', id);\n\n    return this.http.get<Joke>(url, {params});\n  }\n\n\n  private getRandomJoke<T extends Joke>(type: JokeType, category: JokeCategory) : Observable<T> {\n\n    let params = new HttpParams().set('type', type);\n    let url = this.combineUrl(env.JOKE_URL, category);\n\n    return this.http.get<T>(url, { params });\n\n  } \n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Meta, Title } from '@angular/platform-browser';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MetaService {\n\n  private readonly TITLE_PREFIX = 'Joke Generator - '\n\n  constructor(private _titleService: Title, private _meta : Meta) { }\n\n  public updateTitle(title: string, fullTitle:boolean = false) {\n    if(!fullTitle) {\n      this._titleService.setTitle(this.TITLE_PREFIX + title);\n    }\n    else {\n      this._titleService.setTitle(title);\n    }\n  }\n\n  public setDescription(desc: string) {\n\n    this._meta.updateTag({\n      name: 'description',\n      content: desc\n    })\n  }\n\n  public setKeywords(keywords: string) {\n    this._meta.updateTag({\n      name: 'keywords',\n      content: keywords\n    })\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  JOKE_URL: 'https://v2.jokeapi.dev/joke/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}