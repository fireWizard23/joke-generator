{"version":3,"file":"main.js","mappings":"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","sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/reusable/dropdown/dropdown.component.ts","./src/app/components/reusable/dropdown/dropdown.component.html","./src/app/misc/joke.model.ts","./src/app/services/http-service/http-service.service.ts","./src/app/services/joke-http-service/joke-http.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'joke-maker';\n}\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { DropdownComponent } from './components/reusable/dropdown/dropdown.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    NavbarComponent,\n    DropdownComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [ \n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { AfterContentChecked, AfterContentInit, AfterViewChecked, AfterViewInit, ChangeDetectorRef, Component, OnChanges, OnDestroy, OnInit, SimpleChanges, ViewChild, ViewChildren} from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { JokeHttpService} from 'src/app/services/joke-http-service/joke-http.service';\nimport { DropdownComponent } from '../reusable/dropdown/dropdown.component';\nimport {TwoPartJoke,Joke, SingleJoke, getJokeString} from '../../misc/joke.model';\nimport { Option } from '../reusable/dropdown/dropdown.component';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit, OnDestroy {\n\n  jokeString!: string | null | undefined;\n  joke!: Joke;\n\n  jokeSuscription!: Subscription;\n  \n  constructor(private httpService : JokeHttpService ) {}\n\n\n  ngOnDestroy(): void {\n    this.jokeSuscription.unsubscribe();\n  }\n\n\n  ngOnInit(): void {\n    this.getNewJoke();\n    \n  }\n\n  private getNewJoke() {\n    this.jokeString = null;\n    let joke = this.httpService.getSingleJoke();\n\n    this.jokeSuscription = joke.subscribe((val) => {\n      this.jokeString = getJokeString(val) || 'Error';\n      this.joke = val;\n      console.log(val);\n    });\n\n    \n  }\n\n  handleClick(){\n    this.getNewJoke();\n    \n\n\n  }\n  \n\n\n}\n","<div class=\"joke-form-container\">\n\n    <div class=\"joke-container\">\n        <p class=\"joke-text\" style=\"white-space: pre-line;\" >\n            {{ jokeString  || 'Loading...'}}\n        </p>\n        <span class=\"joke-category\" *ngIf=\"jokeString !== null\" >{{joke.category}}</span>\n    </div>\n    \n    <button class=\"joke-button\"\n        (click)=\"handleClick()\"\n    >\n        {{joke === undefined ? 'Get' : 'Another'}} Joke\n    </button>\n\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<header class=\"navbar\">\n    <div class=\"navbar-container\">\n        <div class=\"navbar-brand\">Joke Generator</div>\n    </div>\n</header>","import { AfterContentChecked, AfterContentInit, AfterViewChecked, AfterViewInit, Component, EventEmitter, HostListener, Input, OnChanges, OnInit, Output, Renderer2, SimpleChanges} from '@angular/core';\n\n\nexport interface Option {\n    value: string,\n    id?: string\n}\n\n@Component({\n  selector: 'rm-dropdown',\n  templateUrl: './dropdown.component.html',\n  styleUrls: ['./dropdown.component.scss']\n})\nexport class DropdownComponent implements OnInit\n{\n  \n  private _dropdownIsOpen: boolean = false;\n  readonly ID_PREFIX = 'rm-dropdown-';\n\n  @Output() onValueChange = new EventEmitter<string>();\n  @Input() defaultIndex!: number;\n\n  private _value! : string;\n\n  get value(): string {\n    return this._value;\n  }\n\n  private set value(val: string) {\n    if(val == undefined || val == null)\n      debugger;\n    this._value = val;\n    this.onValueChange.emit(val);\n  }\n\n  _options!: Option[];\n\n  ngOnInit(): void {\n    \n    if(this._options == undefined)\n      throw new Error(\"No options given in the DropdownComponent.\");\n    \n    this._value = this._options[this.defaultIndex || 0].value;\n\n\n  }\n\n  @Input()\n  set option(option: Option[]) {\n\n    option.forEach((val, index) => {\n      val.id = this.ID_PREFIX + index;\n    });\n\n    this._options = option;\n  }\n\n  get dropdownIsOpen() : boolean {\n    return this._dropdownIsOpen;\n  }\n\n  \n\n  @HostListener('window:click', ['$event']) click(e : MouseEvent) {\n    if(!this._dropdownIsOpen)\n      return;\n\n    let target = e.target as Element;\n    if(!target.id.includes(this.ID_PREFIX)) {\n      this.toggleDropdown();\n    }\n    \n  };\n\n\n\n  public toggleDropdown(): void {\n    this._dropdownIsOpen = !this._dropdownIsOpen;\n\n\n  }\n\n  public handleClick(e : Event) {\n    e.stopPropagation();\n    e.preventDefault();\n\n    if(this._options == undefined)\n      return;\n\n    let target = e.target as Element;\n\n    let text = target.id;\n    const val = this._options.find((val) => val.id == text)?.value;\n    \n    if(text !== this.ID_PREFIX + '-1' && val != null){\n      this.value = val;\n\n    } \n\n    setTimeout(() => {\n      this.toggleDropdown();\n\n    }, 100)\n\n\n  }\n\n}\n","<button    class=\"dropdown\"  href=\"#\"\n    (click)=\"handleClick($event)\" >\n    <h1 class=\"dropdown-label\" [id]=\"ID_PREFIX + '-1'\"\n        [ngClass]=\"{'full': !dropdownIsOpen}\"\n    >\n        {{ value || 'Error'}}\n    </h1>\n    <div class=\"dropdown-options\" [hidden]=\"!dropdownIsOpen\" >\n        <button\n        *ngFor=\"let opt of _options; let index= index; let last = last; let first = first;\"\n        [ngClass]=\" {'first': first, 'last': last} \" class=\"dropdown-option\" [id]=\"opt.id\"\n        >\n                {{opt.value}}\n        </button>\n    </div>\n\n</button>","export type JokeFlags = {\r\n    nsfw: boolean,\r\n    religious: boolean,\r\n    political: boolean,\r\n    racist: boolean,\r\n    sexist: boolean\r\n  }\r\n  \r\n  export type JokeType = 'twopart' | 'single';\r\n  export type JokeCategory = 'any' | 'programming' \r\n  \r\n  export type Joke = {\r\n    error: boolean,\r\n    category: JokeCategory,\r\n    type: JokeType,\r\n    flags: JokeFlags,\r\n    explicit: boolean,\r\n    id: number,\r\n    safe: boolean,\r\n    lang: String\r\n  } \r\n  \r\n  export type SingleJoke = {\r\n    joke: string,\r\n    type: 'single'\r\n  } & Joke\r\n  \r\n  export type TwoPartJoke = {\r\n    delivery: string,\r\n    setup: string,\r\n    type: 'twopart'\r\n  } & Joke\r\n\r\n\r\n  export function getJokeString(joke : Joke) : string | null {\r\n      if(joke.type === 'twopart') {\r\n        let twopartJoke = joke as TwoPartJoke;\r\n        return `Setup: ${twopartJoke.setup} \\n Delivery: ${twopartJoke.delivery}`;\r\n\r\n      } else if(joke.type == 'single') {\r\n        let singleJoke = joke as SingleJoke;\r\n\r\n        return singleJoke.joke;\r\n      }\r\n\r\n      return null;\r\n\r\n\r\n  }\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { environment as env } from 'src/environments/environment';\n\n\n@Injectable({\n  providedIn: 'root'\n\n})\nexport class HttpService {\n\n  constructor(protected http : HttpClient ) { }\n\n  /**\n   * @param  {string} url - the relative path to the url\n   */\n  getByUrl<T extends object>(url: string) : Observable<T> {\n    // let params = new HttpParams().set('type', 'single');\n    return this.http.get<T>(this.combineUrl(env.JOKE_URL, url));\n  }\n\n  protected combineUrl(url1: string, url2: string ) : string {\n    const slash = '/';\n    const firstUrlEndsWithSlash = url1.endsWith(slash);\n    const secondUrlStartsWithSlash = url2.startsWith(slash);\n\n\n    if(!firstUrlEndsWithSlash && !secondUrlStartsWithSlash)\n      url1 += slash;\n    \n      return url1 + url2;\n\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpService } from '../http-service/http-service.service';\nimport { environment as env } from 'src/environments/environment';\nimport { HttpParams } from '@angular/common/http';\nimport {TwoPartJoke,Joke, SingleJoke, JokeCategory, JokeType} from '../../misc/joke.model';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JokeHttpService extends HttpService {\n\n\n  public getSingleJoke(category: JokeCategory='any') : Observable<SingleJoke> {\n    return this.getJoke<SingleJoke>('single', category) ;\n  }\n\n\n  public getTwoPartJoke(category: JokeCategory='any') : Observable<TwoPartJoke> {\n    return this.getJoke<TwoPartJoke>('twopart', category) ;\n  }\n\n  private getJoke<T extends Joke>(type: JokeType, category: JokeCategory) : Observable<T> {\n\n    let params = new HttpParams().set('type', type);\n    let url = this.combineUrl(env.JOKE_URL, category);\n\n    return this.http.get<T>(url, {\n      params\n    });\n\n  } \n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  JOKE_URL: 'https://v2.jokeapi.dev/joke/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}